version: '3.8'

services:
  # FastAPI Application
  api:
    build: 
      context: .
      dockerfile: Dockerfile
    image: applywise-backend  # Named image for reuse
    ports:
      - "8000:8000"
    environment: &common-env
      # Redis Configuration (Upstash)
      - REDIS_URL=${REDIS_URL}
      # CELERY_BROKER_URL and CELERY_RESULT_BACKEND use REDIS_URL
      
      # Supabase Configuration
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - SUPABASE_DB_PASSWORD=${SUPABASE_DB_PASSWORD}
      
      # Application Configuration
      - DEBUG=${DEBUG:-false}
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - HEADLESS_BROWSER=${HEADLESS_BROWSER:-true}
      - BROWSER_TIMEOUT=${BROWSER_TIMEOUT:-10}
      
      # Firebase Configuration
      - FIREBASE_CREDENTIALS=${FIREBASE_CREDENTIALS}
      - FIREBASE_STORAGE_BUCKET=${FIREBASE_STORAGE_BUCKET}
      
      # CORS Configuration
      - CORS_ORIGINS=${CORS_ORIGINS:-https://applywise.ca,http://localhost:3000}
      
      # Stripe Configuration
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      
      # OpenAI Configuration
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      
      # Google Gemini Configuration
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      
      # WebSocket Configuration
      - WEBSOCKET_URL=${WEBSOCKET_URL:-ws://localhost:8001/ws}

    volumes:
      - ./app:/app/app
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

  # Celery Worker
  worker:
    image: applywise-backend  # Reuse the same image
    environment: *common-env  # Reuse environment variables

    volumes:
      - ./app:/app/app
      - /dev/shm:/dev/shm  # Shared memory for Chrome
    command: ["celery", "-A", "app.tasks.celery_app", "worker", "--loglevel=info", "--autoscale=4,1"]
    deploy:
      replicas: 1  # Start with 1 replica, scale as needed

# No volumes needed - using cloud services (Supabase, Upstash Redis, Firebase) 